1.系统的构造与使用分开
依赖注入机制使得构造和使用相分离。
2.扩容
一开始就做对的系统纯属神话。应该立足于实现今天的用户需求，然后重构，明天再扩展，实现新的用户需求。这一切建立在将关注面恰当切分的基础上。
横贯式关注面AOP
3.测试驱动系统架构
通过方面式的手段切分关注面的威力不可低估。如果使用POJO编写应用程序的领域逻辑，在代码层面与架构关注面分离开，就有可能真正的用测试来驱动架构。（不明白）