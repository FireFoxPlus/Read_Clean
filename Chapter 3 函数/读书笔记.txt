1.每个函数都只说一件事。而且每个函数都依序把你带到下一个函数。
2.if，else，while等语句，其中的代码块应该只有一行，即一个函数调用语句。所以函数的缩进层级不应该多于一层。
3.只做一件事的函数无法被合理的切分为多个区段。
4.每个函数都要在同一个抽象层级上。代码应该有自顶向下的阅读顺序，让每个函数后面都跟着位于下一抽象层级的函数。
5.如果使用switch语句，可以是使用switch实现抽象工厂，产生集成层次中的不同类型的对象，最后使用重载，
简化每个方法的实现，不再每个方法中出现switch。
6.参数数量越少越好，避免三个参数以上的函数。因为参数和函数名处在不同的抽象层级，
他要求你了解目前并不特别重要的细节。较少的参数的函数测试也较方便。结果更是不应该通过参数输出。
7.标识参数不应该使用，那表明函数做了不止一件事。
8.二元函数改成一元函数，可以通过改写为某个参数的成员变量的方式。
9.如果函数需要两个，三个甚至以上的参数，那么就说明一些参数应该封装为类了。当一组参数应该被共同传递，那么他们
往往也会该有自己名称的某个概念的一部分。
10.函数不应该具有副作用。因为函数不止做了一件事，更重要的事是，函数的副作用可能不被知晓，从而破坏数据。
11.如果函数要修改某种状态，那么就修改所属对象的状态，而不应该使用输出参数。
12.使用异常替代返回错误码。
13.不应该让try/catch代码块搞乱了代码的结构，把错误处理与正常流程混为一谈。
根据单一职责原则，如果关键字try存在，那么它就该是这个函数的第一个单词，而且在catch/finally之后也不该存在其他内容。
14.不要写重复的代码。
