1.并发防御原则
1）单一权责原则。、
并发本身是复杂到足够成为修改的理由的。应该分离并发相关代码与其他代码。
2）限制数据作用域
更新共享数据的地方越多，就越难找到错误源、越可能忘记保护一个或多个临界区。
严格限制对可能被共享的数据的访问。
3）使用数据副本。
避免共享数据的方法之一就是一开始就避免共享数据。
4）线程应尽可能独立
尝试将数据分解到可被独立线程操作的独立子集。
2.同步方法之间的依赖或导致并发代码中的缺陷。
避免使用一个共享对象的多个方法。
3.保持同步区域微小
4.如何正确的关闭系统，需要考虑到线程之间的同步互斥。
5.不要将错误归咎于偶发错误。
6.在测试的时候，要运行多于处理器数量的线程，这样越有可能出错。